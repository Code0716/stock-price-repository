// Code generated by MockGen. DO NOT EDIT.
// Source: mysqldump.go
//
// Generated by this command:
//
//	mockgen -source=mysqldump.go -package=mock_gateway -destination=../../mock/gateway/mysqldump.go
//

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMySQLDumpClient is a mock of MySQLDumpClient interface.
type MockMySQLDumpClient struct {
	ctrl     *gomock.Controller
	recorder *MockMySQLDumpClientMockRecorder
	isgomock struct{}
}

// MockMySQLDumpClientMockRecorder is the mock recorder for MockMySQLDumpClient.
type MockMySQLDumpClientMockRecorder struct {
	mock *MockMySQLDumpClient
}

// NewMockMySQLDumpClient creates a new mock instance.
func NewMockMySQLDumpClient(ctrl *gomock.Controller) *MockMySQLDumpClient {
	mock := &MockMySQLDumpClient{ctrl: ctrl}
	mock.recorder = &MockMySQLDumpClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMySQLDumpClient) EXPECT() *MockMySQLDumpClientMockRecorder {
	return m.recorder
}

// ExportDailyStockPriceByYear mocks base method.
func (m *MockMySQLDumpClient) ExportDailyStockPriceByYear(ctx context.Context, year int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportDailyStockPriceByYear", ctx, year)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportDailyStockPriceByYear indicates an expected call of ExportDailyStockPriceByYear.
func (mr *MockMySQLDumpClientMockRecorder) ExportDailyStockPriceByYear(ctx, year any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportDailyStockPriceByYear", reflect.TypeOf((*MockMySQLDumpClient)(nil).ExportDailyStockPriceByYear), ctx, year)
}

// ExportTableAll mocks base method.
func (m *MockMySQLDumpClient) ExportTableAll(ctx context.Context, fileName, tableName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportTableAll", ctx, fileName, tableName)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportTableAll indicates an expected call of ExportTableAll.
func (mr *MockMySQLDumpClientMockRecorder) ExportTableAll(ctx, fileName, tableName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportTableAll", reflect.TypeOf((*MockMySQLDumpClient)(nil).ExportTableAll), ctx, fileName, tableName)
}
