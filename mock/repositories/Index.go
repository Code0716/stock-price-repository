// Code generated by MockGen. DO NOT EDIT.
// Source: Index.go
//
// Generated by this command:
//
//	mockgen -source=Index.go -package=mock_repositories -destination=../mock/repositories/Index.go
//

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	reflect "reflect"

	models "github.com/Code0716/stock-price-repository/models"
	gomock "go.uber.org/mock/gomock"
)

// MockNikkeiRepository is a mock of NikkeiRepository interface.
type MockNikkeiRepository struct {
	ctrl     *gomock.Controller
	recorder *MockNikkeiRepositoryMockRecorder
	isgomock struct{}
}

// MockNikkeiRepositoryMockRecorder is the mock recorder for MockNikkeiRepository.
type MockNikkeiRepositoryMockRecorder struct {
	mock *MockNikkeiRepository
}

// NewMockNikkeiRepository creates a new mock instance.
func NewMockNikkeiRepository(ctrl *gomock.Controller) *MockNikkeiRepository {
	mock := &MockNikkeiRepository{ctrl: ctrl}
	mock.recorder = &MockNikkeiRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNikkeiRepository) EXPECT() *MockNikkeiRepositoryMockRecorder {
	return m.recorder
}

// CreateNikkeiStockAverageDailyPrices mocks base method.
func (m *MockNikkeiRepository) CreateNikkeiStockAverageDailyPrices(ctx context.Context, averageDailyPrices models.IndexStockAverageDailyPrices) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNikkeiStockAverageDailyPrices", ctx, averageDailyPrices)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNikkeiStockAverageDailyPrices indicates an expected call of CreateNikkeiStockAverageDailyPrices.
func (mr *MockNikkeiRepositoryMockRecorder) CreateNikkeiStockAverageDailyPrices(ctx, averageDailyPrices any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNikkeiStockAverageDailyPrices", reflect.TypeOf((*MockNikkeiRepository)(nil).CreateNikkeiStockAverageDailyPrices), ctx, averageDailyPrices)
}
