// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package gen_model

import (
	"time"
)

const TableNameDjiStockAverageDailyStockPrice = "dji_stock_average_daily_stock_price"

// DjiStockAverageDailyStockPrice mapped from table <dji_stock_average_daily_stock_price>
type DjiStockAverageDailyStockPrice struct {
	Date          time.Time `gorm:"column:date;type:datetime;primaryKey;comment:date" json:"date"`                                           // date
	OpenPrice     float64   `gorm:"column:open_price;type:decimal(10,4);not null;comment:始値" json:"open_price"`                              // 始値
	ClosePrice    float64   `gorm:"column:close_price;type:decimal(10,4);not null;comment:終値" json:"close_price"`                            // 終値
	HighPrice     float64   `gorm:"column:high_price;type:decimal(10,4);not null;comment:高値" json:"high_price"`                              // 高値
	LowPrice      float64   `gorm:"column:low_price;type:decimal(10,4);not null;comment:安値" json:"low_price"`                                // 安値
	AdjClosePrice float64   `gorm:"column:adj_close_price;type:decimal(10,4);not null;comment:配当や株式分割を考慮した終値" json:"adj_close_price"`        // 配当や株式分割を考慮した終値
	CreatedAt     time.Time `gorm:"column:created_at;type:datetime;not null;default:CURRENT_TIMESTAMP;comment:created_at" json:"created_at"` // created_at
	UpdatedAt     time.Time `gorm:"column:updated_at;type:datetime;not null;default:CURRENT_TIMESTAMP;comment:updated_at" json:"updated_at"` // updated_at
}

// TableName DjiStockAverageDailyStockPrice's table name
func (*DjiStockAverageDailyStockPrice) TableName() string {
	return TableNameDjiStockAverageDailyStockPrice
}
