// Code generated by MockGen. DO NOT EDIT.
// Source: index_interactor.go
//
// Generated by this command:
//
//	mockgen -source=index_interactor.go -package=mock_usecase -destination=../mock/usecase/index_interactor.go
//

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockIndexInteractor is a mock of IndexInteractor interface.
type MockIndexInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockIndexInteractorMockRecorder
	isgomock struct{}
}

// MockIndexInteractorMockRecorder is the mock recorder for MockIndexInteractor.
type MockIndexInteractorMockRecorder struct {
	mock *MockIndexInteractor
}

// NewMockIndexInteractor creates a new mock instance.
func NewMockIndexInteractor(ctrl *gomock.Controller) *MockIndexInteractor {
	mock := &MockIndexInteractor{ctrl: ctrl}
	mock.recorder = &MockIndexInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndexInteractor) EXPECT() *MockIndexInteractorMockRecorder {
	return m.recorder
}

// CreateNikkeiAndDjiHistoricalData mocks base method.
func (m *MockIndexInteractor) CreateNikkeiAndDjiHistoricalData(ctx context.Context, t time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNikkeiAndDjiHistoricalData", ctx, t)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNikkeiAndDjiHistoricalData indicates an expected call of CreateNikkeiAndDjiHistoricalData.
func (mr *MockIndexInteractorMockRecorder) CreateNikkeiAndDjiHistoricalData(ctx, t any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNikkeiAndDjiHistoricalData", reflect.TypeOf((*MockIndexInteractor)(nil).CreateNikkeiAndDjiHistoricalData), ctx, t)
}
